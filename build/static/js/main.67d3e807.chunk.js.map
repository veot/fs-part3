{"version":3,"sources":["services/person.js","App.js","index.js"],"names":["baseURL","axios","get","then","res","data","newObj","post","id","put","delete","Filter","state","onChange","value","PersonForm","props","onSubmit","nameState","onNameChange","type","numberState","onNumberChange","Person","person","onRemove","name","number","onClick","Numbers","allPersons","nameFilter","handleRemove","persons","filter","p","toLowerCase","startsWith","map","Notification","message","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNameFilter","msgSuc","setMsgSuc","msgErr","setMsgErr","useEffect","personService","styleSuccess","background","fontSize","color","padding","borderStyle","borderRadius","marginBottom","styleError","e","target","preventDefault","successMsg","some","window","confirm","personToUpdate","find","updatedPerson","catch","error","setTimeout","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67d3e807.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => axios.get(baseURL).then((res) => res.data);\n\nconst create = (newObj) => axios.post(baseURL, newObj).then((res) => res.data);\n\nconst update = (id, newObj) =>\n  axios.put(`${baseURL}/${id}`, newObj).then((res) => res.data);\n\nconst remove = (id) => axios.delete(`${baseURL}/${id}`).then((res) => res.data);\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport personService from \"./services/person\";\n\nconst Filter = ({ state, onChange }) => {\n  return (\n    <div>\n      filter names with <input value={state} onChange={onChange} />\n    </div>\n  );\n};\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name: <input value={props.nameState} onChange={props.onNameChange} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          type=\"tel\"\n          value={props.numberState}\n          onChange={props.onNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Person = ({ person, onRemove }) => {\n  return (\n    <li>\n      {person.name} {person.number} <button onClick={onRemove}>remove</button>\n    </li>\n  );\n};\n\nconst Numbers = ({ allPersons, nameFilter, handleRemove }) => {\n  const persons = nameFilter\n    ? allPersons.filter((p) =>\n        p.name.toLowerCase().startsWith(nameFilter.toLowerCase())\n      )\n    : allPersons;\n  return (\n    <ul>\n      {persons.map((p) => (\n        <Person key={p.id} person={p} onRemove={() => handleRemove(p.id)} />\n      ))}\n    </ul>\n  );\n};\n\nconst Notification = ({ message, style }) => {\n  return message === null ? null : <div style={style}>{message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [msgSuc, setMsgSuc] = useState(null);\n  const [msgErr, setMsgErr] = useState(null);\n\n  useEffect(\n    () => personService.getAll().then((persons) => setPersons(persons)),\n    []\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let successMsg = null;\n    if (newName === \"\") return;\n    if (persons.some((p) => p.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already in phonebook, replace old number with new?`\n        )\n      ) {\n        const personToUpdate = persons.find((p) => p.name === newName);\n        personService\n          .update(personToUpdate.id, { ...personToUpdate, number: newNumber })\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((p) =>\n                p.id !== updatedPerson.id ? p : updatedPerson\n              )\n            );\n            successMsg = \"Updated\";\n          })\n          .catch((error) => {\n            setMsgErr(`${newName} has already been removed from server`);\n            setTimeout(() => setMsgErr(null), 5000);\n            setPersons(persons.filter((p) => p.id !== personToUpdate.id));\n          });\n      }\n    } else {\n      const newPerson = { name: newName, number: newNumber };\n      personService\n        .create(newPerson)\n        .then((p) => setPersons(persons.concat(p)));\n      successMsg = \"Added\";\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n    if (successMsg) {\n      setMsgSuc(`${successMsg} ${newName}`);\n      setTimeout(() => setMsgSuc(null), 3000);\n    }\n  };\n\n  const handleRemove = (id) => {\n    const personToRemove = persons.find((p) => p.id === id);\n    if (window.confirm(`Remove ${personToRemove.name} ?`)) {\n      personService.remove(id);\n      personService.getAll().then((persons) => {\n        setPersons(persons);\n      });\n    }\n  };\n\n  const handleNameChange = (e) => setNewName(e.target.value);\n\n  const handleNumberChange = (e) => setNewNumber(e.target.value);\n\n  const handleNameFilterChange = (e) => setNameFilter(e.target.value);\n\n  const styleSuccess = {\n    background: \"lightgrey\",\n    fontSize: 20,\n    color: \"green\",\n    padding: 10,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    marginBottom: 10,\n  };\n\n  const styleError = { ...styleSuccess, color: \"red\" };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={msgSuc} style={styleSuccess} />\n      <Notification message={msgErr} style={styleError} />\n      <Filter state={nameFilter} onChange={handleNameFilterChange} />\n      <h2>Add new contact</h2>\n      <PersonForm\n        onSubmit={handleSubmit}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        nameState={newName}\n        numberState={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Numbers\n        allPersons={persons}\n        nameFilter={nameFilter}\n        handleRemove={handleRemove}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}